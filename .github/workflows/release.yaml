name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release Version"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [win32, win64, linux64]
    environment: release
    env:
      PUB_KEY: ${{ secrets.UID_PUBLIC_KEY_PEM }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget cmake make g++ python3 python3-pip zip

      - name: Download and extract llvm-mingw (for Windows targets)
        if: matrix.target == 'win32' || matrix.target == 'win64'
        run: |
          wget -q https://github.com/mstorsjo/llvm-mingw/releases/download/20250417/llvm-mingw-20250417-ucrt-ubuntu-22.04-x86_64.tar.xz -O llvm-mingw.tar.xz
          mkdir -p /opt/llvm-mingw
          tar -xf llvm-mingw.tar.xz -C /opt/llvm-mingw --strip-components=1
          echo "LLVM_MINGW_DIR=/opt/llvm-mingw" >> $GITHUB_ENV
          echo "/opt/llvm-mingw/bin" >> $GITHUB_PATH

      - name: Write PUB key into file
        run: echo "$PUB_KEY" > faf_pub.pem

      - name: Run build script
        run: |
          chmod +x ./build.sh
          ./build.sh ${{ matrix.target }}

      - name: Package executable
        run: |
          cd build/${{ matrix.target }}
          zip faf-uid-${{ matrix.target }}.zip faf-uid*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: faf-uid-${{ matrix.target }}
          path: build/${{ matrix.target }}/faf-uid-${{ matrix.target }}.zip

  create-release:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        with:
          commit: ${{ github.sha }}
          tag: ${{ github.event.inputs.version }}
          draft: true
          prerelease: true
          artifacts: "release-artifacts/**/*"
